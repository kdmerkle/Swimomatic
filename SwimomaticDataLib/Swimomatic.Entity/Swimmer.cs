using System;
namespace Swimomatic.Entity
{


    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The Swimmer class is the concrete class representing a single Swimmer object.
    // This class is where any customizations can be made.
    // </summary>
    // <history>
    // 		[Generated on 09/18/2009] - Generated by LAAF CodeGen
    // </history>
    [System.Serializable()]
    public class Swimmer : _Swimmer, IEquatable<Swimmer>
    {

        #region  Constructor
        public Swimmer()
        {
        }
        #endregion

        #region IEquatable
        public bool Equals(Swimmer other)
        {
            return (this.SwimmerID == other.SwimmerID);
        }
        #endregion

        private string _LastFirstName;
        public string LastFirstName
        {
            get
            {
                if (string.IsNullOrEmpty(_LastFirstName))
                {
                    _LastFirstName = (string.IsNullOrEmpty(base.LastName)) ? string.Empty : base.LastName + ", " + base.FirstName;
                }
                return _LastFirstName;
            }
            set
            {
                _LastFirstName = value;
            }
        }

        private string _AbbrevLastFirst;
        public string AbbrevLastFirst
        {
            get
            {
                if (string.IsNullOrEmpty(_AbbrevLastFirst))
                {
                    _AbbrevLastFirst = this.Abbrev + ", " + this.Age.ToString() + ", " + this.LastFirstName;
                }
                return _AbbrevLastFirst;
            }
            set
            {
                _AbbrevLastFirst = value;
            }
        }
        public string Abbrev { get; set; }
        public int Age { get; set; }
        public int SwimmerTeamSeasonID { get; set; }
        public int SwimmerTeamRequestID { get; set; }
        public int TeamSeasonID { get; set; }
        public int UserSwimmerID { get; set; }
    }
}
