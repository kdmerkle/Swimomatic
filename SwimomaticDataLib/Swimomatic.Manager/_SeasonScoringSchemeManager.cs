namespace Swimomatic.Manager
{
    
    
    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The _SeasonScoringSchemeManager class is the base manager class.
    // This class should not be modified manually.
    // </summary>
    // <history>
    // 		[Updated on 04/19/2011] - Generated by LAAF CodeGen
    // </history>
    public class _SeasonScoringSchemeManager
    {
        
        private Swimomatic.ServiceProvider.SwimomaticServiceProvider _ServiceProvider;
        
        #region  Constructor 
        public _SeasonScoringSchemeManager()
        {
        }
        
        public _SeasonScoringSchemeManager(Swimomatic.ServiceProvider.SwimomaticServiceProvider serviceProvider)
        {
            _ServiceProvider = serviceProvider;
        }
        #endregion
        
        #region  Service Provider 
        public virtual Swimomatic.ServiceProvider.SwimomaticServiceProvider ServiceProvider
        {
            get
            {
                if ((_ServiceProvider == null))
                {
                    _ServiceProvider = Swimomatic.ServiceProvider.SwimomaticServiceProvider.GetInstance();
                }
                return _ServiceProvider;
            }
        }
        #endregion
        
        public virtual int SeasonScoringSchemeSave(Swimomatic.Entity.SeasonScoringScheme SeasonScoringScheme)
        {
            return ((int)(ServiceProvider.SeasonScoringSchemeSave(SeasonScoringScheme.ScoringSchemeID, SeasonScoringScheme.SeasonID, SeasonScoringScheme.SeasonScoringSchemeID, SeasonScoringScheme.SwimMeetTypeID)));
        }
        
        public virtual void SeasonScoringSchemeDeleteBySeasonID(int SeasonID)
        {
            ServiceProvider.SeasonScoringSchemeDeleteBySeasonID(SeasonID);
        }
        
        public virtual Swimomatic.Entity.SeasonScoringScheme SeasonScoringSchemeGet(int SeasonScoringSchemeID)
        {
            return ((Swimomatic.Entity.SeasonScoringScheme)(LAAF.Data.Helper.MapDataToLAEntity(new Swimomatic.Entity.SeasonScoringScheme(), ServiceProvider.SeasonScoringSchemeGet(SeasonScoringSchemeID))));
        }
        
        public virtual Swimomatic.Entity.SeasonScoringSchemeCollection SeasonScoringSchemeGetAll()
        {
            return ((Swimomatic.Entity.SeasonScoringSchemeCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.SeasonScoringScheme), typeof(Swimomatic.Entity.SeasonScoringSchemeCollection), ServiceProvider.SeasonScoringSchemeGetAll())));
        }
    }
}
