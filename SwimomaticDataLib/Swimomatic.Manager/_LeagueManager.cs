namespace Swimomatic.Manager
{
    
    
    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The _LeagueManager class is the base manager class.
    // This class should not be modified manually.
    // </summary>
    // <history>
    // 		[Updated on 05/21/2011] - Generated by LAAF CodeGen
    // </history>
    public class _LeagueManager
    {
        
        private Swimomatic.ServiceProvider.SwimomaticServiceProvider _ServiceProvider;
        
        #region  Constructor 
        public _LeagueManager()
        {
        }
        
        public _LeagueManager(Swimomatic.ServiceProvider.SwimomaticServiceProvider serviceProvider)
        {
            _ServiceProvider = serviceProvider;
        }
        #endregion
        
        #region  Service Provider 
        public virtual Swimomatic.ServiceProvider.SwimomaticServiceProvider ServiceProvider
        {
            get
            {
                if ((_ServiceProvider == null))
                {
                    _ServiceProvider = Swimomatic.ServiceProvider.SwimomaticServiceProvider.GetInstance();
                }
                return _ServiceProvider;
            }
        }
        #endregion
        
        public virtual int LeagueSave(Swimomatic.Entity.League League)
        {
            return ((int)(ServiceProvider.LeagueSave(League.Description, League.LeagueID, League.LeagueName, League.RegionID)));
        }
        
        public virtual void LeagueDelete(int LeagueID)
        {
            ServiceProvider.LeagueDelete(LeagueID);
        }
        
        public virtual Swimomatic.Entity.League LeagueGet(int LeagueID)
        {
            return ((Swimomatic.Entity.League)(LAAF.Data.Helper.MapDataToLAEntity(new Swimomatic.Entity.League(), ServiceProvider.LeagueGet(LeagueID))));
        }
        
        public virtual Swimomatic.Entity.LeagueCollection LeagueGetAllBySystemUserID(int SystemUserID)
        {
            return ((Swimomatic.Entity.LeagueCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.League), typeof(Swimomatic.Entity.LeagueCollection), ServiceProvider.LeagueGetAllBySystemUserID(SystemUserID))));
        }
        
        public virtual Swimomatic.Entity.LeagueCollection LeagueGetAllCurrentSeasonBySystemUserID(int SystemUserID)
        {
            return ((Swimomatic.Entity.LeagueCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.League), typeof(Swimomatic.Entity.LeagueCollection), ServiceProvider.LeagueGetAllCurrentSeasonBySystemUserID(SystemUserID))));
        }
        
        public virtual Swimomatic.Entity.League LeagueGetBySeasonID(int SeasonID)
        {
            return ((Swimomatic.Entity.League)(LAAF.Data.Helper.MapDataToLAEntity(new Swimomatic.Entity.League(), ServiceProvider.LeagueGetBySeasonID(SeasonID))));
        }
    }
}
