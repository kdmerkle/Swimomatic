namespace Swimomatic.Manager
{
    
    
    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The _SwimMeetTeamManager class is the base manager class.
    // This class should not be modified manually.
    // </summary>
    // <history>
    // 		[Updated on 12/19/2011] - Generated by LAAF CodeGen
    // </history>
    public class _SwimMeetTeamManager
    {
        
        private Swimomatic.ServiceProvider.SwimomaticServiceProvider _ServiceProvider;
        
        #region  Constructor 
        public _SwimMeetTeamManager()
        {
        }
        
        public _SwimMeetTeamManager(Swimomatic.ServiceProvider.SwimomaticServiceProvider serviceProvider)
        {
            _ServiceProvider = serviceProvider;
        }
        #endregion
        
        #region  Service Provider 
        public virtual Swimomatic.ServiceProvider.SwimomaticServiceProvider ServiceProvider
        {
            get
            {
                if ((_ServiceProvider == null))
                {
                    _ServiceProvider = Swimomatic.ServiceProvider.SwimomaticServiceProvider.GetInstance();
                }
                return _ServiceProvider;
            }
        }
        #endregion
        
        public virtual int SwimMeetTeamSave(Swimomatic.Entity.SwimMeetTeam SwimMeetTeam)
        {
            return ((int)(ServiceProvider.SwimMeetTeamSave(SwimMeetTeam.IsHomeTeam, SwimMeetTeam.SwimMeetID, SwimMeetTeam.SwimMeetTeamID, SwimMeetTeam.TeamSeasonID)));
        }
        
        public virtual void SwimMeetTeamDelete(int SwimMeetTeamID)
        {
            ServiceProvider.SwimMeetTeamDelete(SwimMeetTeamID);
        }
        
        public virtual Swimomatic.Entity.SwimMeetTeam SwimMeetTeamGet(int SwimMeetTeamID)
        {
            return ((Swimomatic.Entity.SwimMeetTeam)(LAAF.Data.Helper.MapDataToLAEntity(new Swimomatic.Entity.SwimMeetTeam(), ServiceProvider.SwimMeetTeamGet(SwimMeetTeamID))));
        }
        
        public virtual Swimomatic.Entity.SwimMeetTeamCollection SwimMeetTeamGetAll()
        {
            return ((Swimomatic.Entity.SwimMeetTeamCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.SwimMeetTeam), typeof(Swimomatic.Entity.SwimMeetTeamCollection), ServiceProvider.SwimMeetTeamGetAll())));
        }
        
        public virtual Swimomatic.Entity.SwimMeetTeamCollection SwimMeetTeamGetAllBySwimMeetID(int SwimMeetID)
        {
            return ((Swimomatic.Entity.SwimMeetTeamCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.SwimMeetTeam), typeof(Swimomatic.Entity.SwimMeetTeamCollection), ServiceProvider.SwimMeetTeamGetAllBySwimMeetID(SwimMeetID))));
        }
        
        public virtual void SwimMeetTeamDeleteBySwimMeetID(int SwimMeetID)
        {
            ServiceProvider.SwimMeetTeamDeleteBySwimMeetID(SwimMeetID);
        }
    }
}
