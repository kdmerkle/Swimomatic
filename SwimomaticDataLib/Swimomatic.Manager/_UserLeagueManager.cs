namespace Swimomatic.Manager
{
    
    
    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The _UserLeagueManager class is the base manager class.
    // This class should not be modified manually.
    // </summary>
    // <history>
    // 		[Updated on 09/09/2010] - Generated by LAAF CodeGen
    // </history>
    public class _UserLeagueManager
    {
        
        private Swimomatic.ServiceProvider.SwimomaticServiceProvider _ServiceProvider;
        
        #region  Constructor 
        public _UserLeagueManager()
        {
        }
        
        public _UserLeagueManager(Swimomatic.ServiceProvider.SwimomaticServiceProvider serviceProvider)
        {
            _ServiceProvider = serviceProvider;
        }
        #endregion
        
        #region  Service Provider 
        public virtual Swimomatic.ServiceProvider.SwimomaticServiceProvider ServiceProvider
        {
            get
            {
                if ((_ServiceProvider == null))
                {
                    _ServiceProvider = Swimomatic.ServiceProvider.SwimomaticServiceProvider.GetInstance();
                }
                return _ServiceProvider;
            }
        }
        #endregion
        
        public virtual int UserLeagueSave(Swimomatic.Entity.UserLeague UserLeague)
        {
            return ((int)(ServiceProvider.UserLeagueSave(UserLeague.LeagueID, UserLeague.SystemUserID, UserLeague.UserLeagueID)));
        }
        
        public virtual void UserLeagueDelete(int UserLeagueID)
        {
            ServiceProvider.UserLeagueDelete(UserLeagueID);
        }
        
        public virtual Swimomatic.Entity.UserLeague UserLeagueGet(int UserLeagueID)
        {
            return ((Swimomatic.Entity.UserLeague)(LAAF.Data.Helper.MapDataToLAEntity(new Swimomatic.Entity.UserLeague(), ServiceProvider.UserLeagueGet(UserLeagueID))));
        }
        
        public virtual Swimomatic.Entity.UserLeagueCollection UserLeagueGetAll()
        {
            return ((Swimomatic.Entity.UserLeagueCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.UserLeague), typeof(Swimomatic.Entity.UserLeagueCollection), ServiceProvider.UserLeagueGetAll())));
        }
        
        public virtual Swimomatic.Entity.UserLeagueCollection UserLeagueGetAllBySystemUserID(int SystemUserID)
        {
            return ((Swimomatic.Entity.UserLeagueCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.UserLeague), typeof(Swimomatic.Entity.UserLeagueCollection), ServiceProvider.UserLeagueGetAllBySystemUserID(SystemUserID))));
        }
    }
}
