namespace Swimomatic.Manager
{
    
    
    // Logical Architect Application Framework
    // Logical Architect (LogArch, Inc)
    // www.logicalarchitect.com
    //  
    // <summary>
    // The _ReportManager class is the base manager class.
    // This class should not be modified manually.
    // </summary>
    // <history>
    // 		[Updated on 11/02/2011] - Generated by LAAF CodeGen
    // </history>
    public class _ReportManager
    {
        
        private Swimomatic.ServiceProvider.SwimomaticServiceProvider _ServiceProvider;
        
        #region  Constructor 
        public _ReportManager()
        {
        }
        
        public _ReportManager(Swimomatic.ServiceProvider.SwimomaticServiceProvider serviceProvider)
        {
            _ServiceProvider = serviceProvider;
        }
        #endregion
        
        #region  Service Provider 
        public virtual Swimomatic.ServiceProvider.SwimomaticServiceProvider ServiceProvider
        {
            get
            {
                if ((_ServiceProvider == null))
                {
                    _ServiceProvider = Swimomatic.ServiceProvider.SwimomaticServiceProvider.GetInstance();
                }
                return _ServiceProvider;
            }
        }
        #endregion
        
        public virtual Swimomatic.Entity.ReportHeatSheetEventCollection RptHeatSheetEventGetByHeatSheetEventID(int HeatSheetEventID)
        {
            return ((Swimomatic.Entity.ReportHeatSheetEventCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.ReportHeatSheetEvent), typeof(Swimomatic.Entity.ReportHeatSheetEventCollection), ServiceProvider.RptHeatSheetEventGetByHeatSheetEventID(HeatSheetEventID))));
        }
        
        public virtual Swimomatic.Entity.ReportHeatSheetEventCollection RptHeatSheetEventGetByHeatID(int HeatID)
        {
            return ((Swimomatic.Entity.ReportHeatSheetEventCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.ReportHeatSheetEvent), typeof(Swimomatic.Entity.ReportHeatSheetEventCollection), ServiceProvider.RptHeatSheetEventGetByHeatID(HeatID))));
        }
        
        public virtual Swimomatic.Entity.ReportHeatSheetEventCollection RptHeatSheetEventGetByHeatSheetID(int HeatSheetID)
        {
            return ((Swimomatic.Entity.ReportHeatSheetEventCollection)(LAAF.Data.Helper.MapDataToLAEntityCollection(typeof(Swimomatic.Entity.ReportHeatSheetEvent), typeof(Swimomatic.Entity.ReportHeatSheetEventCollection), ServiceProvider.RptHeatSheetEventGetByHeatSheetID(HeatSheetID))));
        }
    }
}
