if exists (select * from sysobjects where type = 'P' and name = 'usp_ResultSave')
	begin
	    drop procedure dbo.usp_ResultSave
	end
go

create procedure dbo.usp_ResultSave
 /*******************************************************************************************************
 Logical Advantage, LLC
 www.logicaladvantage.com
 704-377-5066
 --------------------------------------------------------------------------------------------------------
 Stored Procedure:	usp_ResultSave

 Description:		Saves an Result record for the given parameters

 --------------------------------------------------------------------------------------------------------
 Change Log:
 v1.0.0 - 12/30/2010	Original Release - Generated by LAAF
 ********************************************************************************************************
 To keep the Generator from overwriting this file add the word NOT between the center asterisks ( *NOT* )
 *** DO *NOT* GENERATE ***
 ********************************************************************************************************/
 @AgeClassID int
,@CreatedByUserID int
,@CreatedDate datetime
,@Disqualified bit
,@Distance int
,@ElapsedTime decimal(8,2)
,@EventDate datetime
,@HeatSwimmerID int
,@IsCertified bit
,@IsProtested bit
,@LaneLength decimal(9,4)
,@ModifiedByUserID int
,@ModifiedDate datetime
,@Place int
,@Points decimal(6,3)
,@ResultID int
,@ScoringSchemeID int
,@Split decimal(8,2)
,@StrokeID int
,@SwimmerID int
,@SwimmerTeamSeasonID int
,@TeamSeasonID int
,@UOMID int

as
	if @ModifiedByUserID = 0 set @ModifiedByUserID = null
	if @ScoringSchemeID = 0 set @ScoringSchemeID = null
	if @Place = 0 set @Place = null
	if @Points = 0 set @Points = null


	declare @InsertedPrimaryKeyTable table (ResultID int)
		
	--only update stats, if someone later changes the pool config, etc., we want the original length, distance, etc., preserved
	if exists (select 1 from dbo.Result where ResultID = @ResultID or HeatSwimmerID = @HeatSwimmerID)
		begin			
			update dbo.Result
			set
				 Disqualified = @Disqualified
				,ElapsedTime = @ElapsedTime
				,IsCertified = @IsCertified
				,IsProtested = @IsProtested
				,ModifiedByUserID = @ModifiedByUserID
				,ModifiedDate = @ModifiedDate
				,Place = @Place 
				,Points = @Points
				,Split = @Split
				,ScoringSchemeID = @ScoringSchemeID
			output inserted.ResultID into @InsertedPrimaryKeyTable
			where ResultID = @ResultID or HeatSwimmerID = @HeatSwimmerID
		end
	else
		begin
			--Populate supporting (denormalized) parameters
			select	 @AgeClassID = se.AgeClassID
					,@Distance = hse.Distance
					,@EventDate = sm.StartDate
					,@LaneLength = pc.LaneLength
					,@StrokeID = se.StrokeID
					,@SwimmerID = sts.SwimmerID
					,@SwimmerTeamSeasonID = sts.SwimmerTeamSeasonID
					,@TeamSeasonID = sts.TeamSeasonID
					,@UOMID = pc.UOMID
			from dbo.HeatSwimmer hs
			inner join dbo.Heat h on h.HeatID = hs.HeatID
			inner join dbo.HeatSheetEvent hse on hse.HeatSheetEventID = h.HeatSheetEventID
			inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
			inner join dbo.HeatSheet hst on hst.HeatSheetID = hse.HeatSheetID
			inner join dbo.PoolConfig pc on pc.PoolConfigID = hst.PoolConfigID
			inner join dbo.SwimMeet sm on sm.SwimMeetID = hst.SwimMeetID
			inner join dbo.SwimmerTeamSeason sts on sts.SwimmerTeamSeasonID = hs.SwimmerTeamSeasonID
			where hs.HeatSwimmerID = @HeatSwimmerID

			insert into dbo.Result(
				 AgeClassID
				,CreatedByUserID
				,CreatedDate
				,Disqualified
				,Distance
				,ElapsedTime
				,EventDate
				,HeatSwimmerID
				,IsCertified
				,IsProtested
				,LaneLength
				,ModifiedByUserID
				,ModifiedDate
				,Place
				,Points
				,ScoringSchemeID
				,Split
				,StrokeID
				,SwimmerID
				,SwimmerTeamSeasonID
				,TeamSeasonID
				,UOMID
			)
			output inserted.ResultID into @InsertedPrimaryKeyTable
			values (
				 @AgeClassID
				,@CreatedByUserID
				,@CreatedDate
				,@Disqualified
				,@Distance
				,@ElapsedTime
				,@EventDate
				,@HeatSwimmerID
				,@IsCertified
				,@IsProtested
				,@LaneLength
				,@ModifiedByUserID
				,@ModifiedDate
				,@Place
				,@Points
				,@ScoringSchemeID
				,@Split
				,@StrokeID
				,@SwimmerID
				,@SwimmerTeamSeasonID
				,@TeamSeasonID
				,@UOMID
			)
			
		end

	select ResultID from @InsertedPrimaryKeyTable
		
go

