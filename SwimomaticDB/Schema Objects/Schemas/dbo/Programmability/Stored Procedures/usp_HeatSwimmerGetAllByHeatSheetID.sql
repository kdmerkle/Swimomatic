
if exists (select * from sysobjects where type = 'P' and name = 'usp_HeatSwimmerGetAllByHeatSheetID')
	begin
	    drop procedure dbo.usp_HeatSwimmerGetAllByHeatSheetID
	end
go

create procedure dbo.usp_HeatSwimmerGetAllByHeatSheetID
 /*******************************************************************************************************
 Logical Advantage, LLC
 www.logicaladvantage.com
 704-377-5066
 --------------------------------------------------------------------------------------------------------
 Stored Procedure:	usp_HeatSwimmerGetAllByHeatSheetID
 
 Description:		Selects a HeatSwimmer record for the given parameters
 
 --------------------------------------------------------------------------------------------------------
 Change Log:
 v1.0.0 - 2/29/2012  Original Release - Generated by LAAF
 ********************************************************************************************************
 To keep the Generator from overwriting this file add the word NOT between the center asterisks ( *NOT* )
 *** DO *NOT* GENERATE ***
 ********************************************************************************************************
 The result of this procedure call is used to populate the HeatSwimmer Entity
 The Entity expects the following properties to be returned:
   LaneNumber < System.Int32 >
   HeatID < System.Int32 >
   HeatSwimmerID < System.Int32 >
   SwimmerTeamSeasonID < System.Int32 >
   Leg < System.Int32 >
   SeedResultID < System.Int32 >
 ********************************************************************************************************/

	@HeatSheetID int
as

	select
		 hse.[Sequence]
		,hse.SwimEventID
		,hse.HeatSheetEventID
		,hse.Distance
		,hse.HeatSheetID
		,ac.[Description] + ' ' + cast(hse.Distance as varchar) + ' ' + substring(u.[Description],0,LEN(u.[Description])) + ' ' + s.[Description] as [Description]
		,hs.SwimMeetID --need this to determine IsAdmin
		,coalesce(h.HeatNumber, 0) as HeatNumber
		,pc.LaneCount
		,s.IsRelay
		,coalesce(hsw.HeatID, 0) as HeatID
		,coalesce(hsw.HeatSwimmerID, 0) as HeatSwimmerID
		,coalesce(hsw.LaneNumber, 0) as LaneNumber
		,coalesce(hsw.Leg, 0) as Leg
		,coalesce(hsw.SeedResultID, 0) as SeedResultID
		,coalesce(hsw.SwimmerTeamSeasonID, 0) as SwimmerTeamSeasonID
		,coalesce(sw.SwimmerID, 0) as SwimmerID 
		,coalesce(sw.FirstName, '') as FirstName
		,coalesce(sw.LastName, '') as LastName
		,coalesce(sw.BirthDate, '01/01/1900') as BirthDate 
		,coalesce(t.Abbrev, '') as Abbrev
		,coalesce(r.ElapsedTime, 0) as ElapsedTime
		,coalesce(r.Split, 0) as Split
		,coalesce(r.Disqualified, 0) as Disqualified
		,coalesce(r.Points, 0) as Points
		,coalesce(r.Place, 0) as Place
		,coalesce(seed.ElapsedTime, 0) as SeedTime
	from dbo.HeatSheetEvent hse
	inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
	inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
	inner join dbo.Stroke s on s.StrokeID = se.StrokeID
	inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
	inner join dbo.PoolConfig pc on pc.PoolConfigID = hs.PoolConfigID
	inner join dbo.UOM u on u.UOMID = pc.UOMID
	left join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
	left join dbo.HeatSwimmer hsw on hsw.HeatID = h.HeatID
	left join dbo.SwimmerTeamSeason sts on sts.SwimmerTeamSeasonID = hsw.SwimmerTeamSeasonID
	left join dbo.Swimmer sw on sw.SwimmerID = sts.SwimmerID
	left join dbo.TeamSeason ts on ts.TeamSeasonID = sts.TeamSeasonID
	left join dbo.Team t on t.TeamID = ts.TeamID
	left join dbo.Result r on r.HeatSwimmerID = hsw.HeatSwimmerID
	left join dbo.Result seed on seed.ResultID = hsw.SeedResultID
	where hse.HeatSheetID = @HeatSheetID
	order by hse.[Sequence]
			,h.HeatNumber
			,hsw.LaneNumber
			,hsw.Leg
		
go

