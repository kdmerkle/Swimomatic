
if exists (select * from sysobjects where type = 'P' and name = 'usp_SwimmerGetAllEligibleByHeatSheetEventID')
	begin
	    drop procedure dbo.usp_SwimmerGetAllEligibleByHeatSheetEventID
	end
go

create procedure dbo.usp_SwimmerGetAllEligibleByHeatSheetEventID
 /*******************************************************************************************************
 Logical Advantage, LLC
 www.logicaladvantage.com
 704-377-5066
 --------------------------------------------------------------------------------------------------------
 Stored Procedure:	usp_SwimmerGetAllEligibleByHeatSheetEventID
 
 Description:		Selects a Swimmer record for the given parameters
 
 --------------------------------------------------------------------------------------------------------
 Change Log:
 v1.0.0 - 10/25/2010  Original Release - Generated by LAAF
 ********************************************************************************************************
 To keep the Generator from overwriting this file add the word NOT between the center asterisks ( *NOT* )
 *** DO *NOT* GENERATE ***
 ********************************************************************************************************
 The result of this procedure call is used to populate the Swimmer Entity
 The Entity expects the following properties to be returned:
   BirthDate < System.DateTime >
   FirstName < System.String >
   LastName < System.String >
   SwimmerID < System.Int32 >
   IsMale < System.Boolean >
 ********************************************************************************************************/
 @HeatSheetEventID int

as
	declare @IsMale bit
			,@AgeClassID int
			,@AgeClassRuleID int
			,@MeetStartDate datetime
			,@SeasonStartDate datetime
			,@SeasonEndDate datetime
			,@AgeClassRuleCustomDate datetime
				
	--get a record containing values used as parameters for uf_IsInAgeClass
	select top 1
			 @IsMale = ac.IsMale
			,@AgeClassID = se.AgeClassID
			,@AgeClassRuleID = ts.AgeClassRuleID
			,@MeetStartDate = sm.StartDate
			,@SeasonStartDate = s.StartDate
			,@SeasonEndDate = s.EndDate
			,@AgeClassRuleCustomDate = s.AgeClassRuleCustomDate
	from dbo.HeatSheetEvent hse 
	inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
	inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
	inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
	inner join dbo.SwimMeetTeam smt on smt.SwimMeetID = hs.SwimMeetID	
	inner join dbo.SwimMeet sm on sm.SwimMeetID = hs.SwimMeetID	
	inner join dbo.TeamSeason ts on ts.TeamSeasonID = smt.TeamSeasonID	
	inner join dbo.Season s on s.SeasonID = ts.SeasonID		
	where hse.HeatSheetEventID = @HeatSheetEventID
		
	select
		 s.BirthDate
		,datediff(dd,s.BirthDate,@MeetStartDate)*100/36524 as Age
		,s.FirstName
		,s.LastName
		,s.SwimmerID
		,s.IsMale
		,t.Abbrev
		,sts.SwimmerTeamSeasonID
	from dbo.Swimmer s
	inner join dbo.SwimmerTeamSeason sts on sts.SwimmerID = s.SwimmerID	
	inner join dbo.TeamSeason ts on ts.TeamSeasonID = sts.TeamSeasonID	
	inner join dbo.Team t on t.TeamID = ts.TeamID
	inner join dbo.SwimMeetTeam smt on smt.TeamSeasonID = sts.TeamSeasonID
	inner join dbo.HeatSheet hs on hs.SwimMeetID = smt.SwimMeetID
	inner join dbo.HeatSheetEvent hse on hse.HeatSheetID = hs.HeatSheetID
	where hse.HeatSheetEventID = @HeatSheetEventID
	and s.IsMale = @IsMale
	and dbo.uf_IsInAgeClass(@AgeClassID,@AgeClassRuleCustomDate,@AgeClassRuleID,s.BirthDate,@MeetStartDate,@SeasonStartDate,@SeasonEndDate) = 1

go

