
if exists (select * from sysobjects where type = 'P' and name = 'usp_RptHeatSheetEventGetByHeatSheetEventID')
	begin
	    drop procedure dbo.usp_RptHeatSheetEventGetByHeatSheetEventID
	end
go

create procedure dbo.usp_RptHeatSheetEventGetByHeatSheetEventID
 /*******************************************************************************************************
 Logical Advantage, LLC
 www.logicaladvantage.com
 704-377-5066
 --------------------------------------------------------------------------------------------------------
 Stored Procedure:	usp_RptHeatSheetEventGetByHeatSheetEventID
 
 Description:		Selects a ReportHeatSheetEvent record for the given parameters
 
 --------------------------------------------------------------------------------------------------------
 Change Log:
 v1.0.0 - 10/18/2011  Original Release - Generated by LAAF
 ********************************************************************************************************
 To keep the Generator from overwriting this file add the word NOT between the center asterisks ( *NOT* )
 *** DO *NOT* GENERATE ***
 ********************************************************************************************************
 The result of this procedure call is used to populate the ReportHeatSheetEvent Entity
 The Entity expects the following properties to be returned:
   HeatSheetEventID < System.Int32 >
   SwimmerName < System.String >
   EventDescription < System.String >
   LaneNumber < System.Int32 >
   LaneCount < System.Int32 >
   HeatNumber < System.Int32 >
   HeatID < System.Int32 >
 ********************************************************************************************************/
 @HeatSheetEventID int

as

	declare @IsRelay int
	select @IsRelay = cast(s.IsRelay as int)
	from dbo.HeatSheetEvent hse
	inner join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
	inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
	inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
	inner join dbo.Stroke s on s.StrokeID = se.StrokeID
	where hse.HeatSheetEventID = @HeatSheetEventID
								
	declare @RealHeats table(HeatSheetEventID int
							,[Sequence] int
							,HeatID int
							,HeatNumber int
							,LaneNumber int
							,Leg int
							,SeedTime decimal(8,2)
							,LaneCount int
							,EventDescription varchar(250)
							,SwimmerName varchar(250)
							,RelayTeam varchar(250)
							,Age int
							,TeamName varchar(50)
	)
	
	if @IsRelay = 1
		begin
											
			declare @RelayLaneSwimmers table (RowID int identity(1,1)
											 ,HeatID int
											 ,LaneNumber int
											 ,Leg int
											 ,SwimmerName varchar(50)
											 ,HeatSwimmerID int)
			declare @rowIndex int = 0	
			declare @RowCount int = 0
			declare @SwimmerNames varchar(250)= ''
			declare @SwimmerName varchar(50)	
			declare @LaneNumber int	
			declare @NextLaneNumber int	
			
			declare @GroupedRelaySwimmers table (HeatID int
										,LaneNumber int
										,Swimmers varchar(250)
										,HeatSwimmerID int)
			
			insert into @RelayLaneSwimmers	
			select 
				 h.HeatID
				,hswm.LaneNumber
				,hswm.Leg
				,swm.LastName + ', ' + swm.FirstName as SwimmerName
				,hswm.HeatSwimmerID
			from dbo.HeatSheetEvent hse
			inner join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
			inner join dbo.HeatSwimmer hswm on hswm.HeatID = h.HeatID
			inner join dbo.SwimmerTeamSeason sts on sts.SwimmerTeamSeasonID = hswm.SwimmerTeamSeasonID
			inner join dbo.Swimmer swm on swm.SwimmerID = sts.SwimmerID
			where hse.HeatSheetEventID = @HeatSheetEventID
			order by h.HeatID
					,hswm.LaneNumber
					,hswm.Leg

			set @RowCount = @@ROWCOUNT
				
			while @RowIndex	< @RowCount
			begin
				set @rowIndex = @rowIndex + 1
				select @LaneNumber = LaneNumber from @RelayLaneSwimmers where RowID = @rowIndex
				select @NextLaneNumber = LaneNumber from @RelayLaneSwimmers where RowID = @rowIndex + 1
				select @SwimmerName = Left(cast(Leg as varchar(2)) + ')' + SwimmerName + '                  ',24) from @RelayLaneSwimmers where RowID = @rowIndex
				set @SwimmerNames = @SwimmerNames + @SwimmerName 
				
				if @LaneNumber <> @NextLaneNumber
					begin
						insert into @GroupedRelaySwimmers
						select HeatID, LaneNumber, @SwimmerNames, HeatSwimmerID
						from @RelayLaneSwimmers
						where RowID = @rowIndex
						
						set @SwimmerNames = ''
					end
			
				if @rowIndex = @rowCount
				begin
					insert into @GroupedRelaySwimmers
					select HeatID, @LaneNumber, @SwimmerNames, HeatSwimmerID
					from @RelayLaneSwimmers
					where RowID = @rowIndex
				end			
			end

			insert into @RealHeats 
			select
				 hse.HeatSheetEventID
				,hse.[Sequence]
				,h.HeatID
				,h.HeatNumber
				,grs.LaneNumber
				,1 as Leg
				,isnull(r.ElapsedTime,0) as SeedTime
				,pc.LaneCount
				,'Event ' + CAST(h.HeatNumber as varchar(2)) + ': ' + ac.[Description] + ' ' + cast(hse.Distance as varchar) + ' ' + substring(u.[Description],0,LEN(u.[Description])) + ' ' + s.[Description] as EventDescription
				,grs.Swimmers as SwimmerName
				,'' as RelayTeam
				,0 as Age
				,t.TeamName + ' (' + t.Abbrev + ')' as TeamName
			from dbo.HeatSheetEvent hse
			inner join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
			inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
			inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
			inner join dbo.Stroke s on s.StrokeID = se.StrokeID
			inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
			inner join dbo.PoolConfig pc on pc.PoolConfigID = hs.PoolConfigID
			inner join dbo.UOM u on u.UOMID = pc.UOMID
			inner join @GroupedRelaySwimmers grs on grs.HeatID = h.HeatID
			inner join dbo.HeatSwimmer hswm on hswm.HeatSwimmerID = grs.HeatSwimmerID
			inner join dbo.SwimmerTeamSeason sts on sts.SwimmerTeamSeasonID = hswm.SwimmerTeamSeasonID
			inner join dbo.TeamSeason ts on ts.TeamSeasonID = sts.TeamSeasonID
			inner join dbo.Season sn on sn.SeasonID = ts.SeasonID
			inner join dbo.Team t on t.TeamID = ts.TeamID
			left join dbo.Result r on r.HeatSwimmerID = grs.HeatSwimmerID
			where hse.HeatSheetEventID = @HeatSheetEventID
		end
	else
		begin
			insert into @RealHeats 
			select
				 hse.HeatSheetEventID
				,hse.[Sequence]
				,h.HeatID
				,h.HeatNumber
				,hswm.LaneNumber
				,hswm.Leg
				,isnull(r.ElapsedTime,0) as SeedTime
				,pc.LaneCount
				,'Event ' + CAST(h.HeatNumber as varchar(2)) + ': ' + ac.[Description] + ' ' + cast(hse.Distance as varchar) + ' ' + substring(u.[Description],0,LEN(u.[Description])) + ' ' + s.[Description] as EventDescription
				,swm.LastName + ', ' + swm.FirstName as SwimmerName
				,'' as RelayTeam
				,dbo.uf_GetAdjustedAge(ac.AgeClassID, sn.AgeClassRuleCustomDate, sn.AgeClassRuleID, swm.BirthDate, sm.StartDate, sn.StartDate, sn.EndDate) as Age
				,t.TeamName + ' (' + t.Abbrev + ')' as TeamName
			from dbo.HeatSheetEvent hse
			inner join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
			inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
			inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
			inner join dbo.Stroke s on s.StrokeID = se.StrokeID
			inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
			inner join dbo.SwimMeet sm on sm.SwimMeetID = hs.SwimMeetID
			inner join dbo.PoolConfig pc on pc.PoolConfigID = hs.PoolConfigID
			inner join dbo.UOM u on u.UOMID = pc.UOMID
			inner join dbo.HeatSwimmer hswm on hswm.HeatID = h.HeatID
			inner join dbo.SwimmerTeamSeason sts on sts.SwimmerTeamSeasonID = hswm.SwimmerTeamSeasonID
			inner join dbo.TeamSeason ts on ts.TeamSeasonID = sts.TeamSeasonID
			inner join dbo.Season sn on sn.SeasonID = ts.SeasonID
			inner join dbo.Team t on t.TeamID = ts.TeamID
			inner join dbo.Swimmer swm on swm.SwimmerID = sts.SwimmerID
			left join dbo.Result r on r.HeatSwimmerID = hswm.HeatSwimmerID
			where hse.HeatSheetEventID = @HeatSheetEventID
		end
	declare @LaneCount int
			,@index int = 0
			
	declare @EmptyLanes table (LaneNumber int)

	--get the number of lanes in the pool
	select @LaneCount = pc.LaneCount
	from dbo.HeatSheetEvent hse
	inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
	inner join dbo.PoolConfig pc on pc.PoolConfigID = hs.PoolConfigID
	where hse.HeatSheetEventID = @HeatSheetEventID
	group by pc.LaneCount
	
	--populate the Empty lanes table with records used to cross join later
	while @index < 	@LaneCount
	begin
		insert into @EmptyLanes (LaneNumber) values (@index + 1)
		set @index = @index + 1
	end

;with Heats as (
	select	 hse.HeatSheetEventID
			,h.HeatID
			,h.HeatNumber
			,hse.[Sequence]
			,hswm.Leg
			,'Event ' + CAST(h.HeatNumber as varchar(2)) + ': ' + ac.[Description] + ' ' + cast(hse.Distance as varchar) + ' ' + substring(u.[Description],0,LEN(u.[Description])) + ' ' + s.[Description] as EventDescription
	from dbo.Heat h
	inner join dbo.HeatSheetEvent hse on hse.HeatSheetEventID = h.HeatSheetEventID
	inner join dbo.SwimEvent se on se.SwimEventID = hse.SwimEventID
	inner join dbo.AgeClass ac on ac.AgeClassID = se.AgeClassID
	inner join dbo.Stroke s on s.StrokeID = se.StrokeID
	inner join dbo.HeatSheet hs on hs.HeatSheetID = hse.HeatSheetID
	inner join dbo.PoolConfig pc on pc.PoolConfigID = hs.PoolConfigID
	inner join dbo.UOM u on u.UOMID = pc.UOMID
	inner join dbo.HeatSwimmer hswm on hswm.HeatID = h.HeatID
	where h.HeatSheetEventID = @HeatSheetEventID 
	and hswm.Leg = 1
	group by hse.HeatSheetEventID
			,h.HeatID
			,h.HeatNumber
			,hse.[Sequence]
			,hswm.Leg
			,h.HeatNumber
			,ac.[Description]
			,hse.Distance
			,u.[Description]
			,s.[Description]
)
--select * from Heats
,EmptyLaneHeats as(
	select * 
	from Heats h
	cross join @EmptyLanes el
)
--select * from EmptyLaneHeats
	
	
	select	 ISNULL(rh.HeatSheetEventID, z.HeatSheetEventID) as HeatSheetEventID
			,ISNULL(rh.HeatNumber, z.HeatNumber) as HeatNumber
			,ISNULL(rh.LaneNumber, z.LaneNumber) as LaneNumber
			,ISNULL(rh.Sequence, z.Sequence) as Sequence
			,ISNULL(rh.Leg, z.Leg) as Leg
			,ISNULL(rh.HeatID, z.HeatID) as HeatID
			,ISNULL(rh.EventDescription, z.EventDescription) as EventDescription
			,rh.SeedTime
			,rh.LaneCount
			,rh.SwimmerName
			,rh.RelayTeam
			,rh.Age
			,rh.TeamName
	from EmptyLaneHeats z 
	left join @RealHeats rh on z.HeatSheetEventID = rh.HeatSheetEventID 
					and z.LaneNumber = rh.LaneNumber
					and z.HeatNumber = rh.HeatNumber
	order by Sequence
			,HeatNumber
			,LaneNumber
			,Leg


go