
if exists (select * from sysobjects where type = 'P' and name = 'usp_SwimMeetGetAllBySystemUserID')
	begin
	    drop procedure dbo.usp_SwimMeetGetAllBySystemUserID
	end
go

create procedure dbo.usp_SwimMeetGetAllBySystemUserID
 /*******************************************************************************************************
 Logical Advantage, LLC
 www.logicaladvantage.com
 704-377-5066
 --------------------------------------------------------------------------------------------------------
 Stored Procedure:	usp_SwimMeetGetAllBySystemUserID
 
 Description:		Returns Swim Meets forwich the System User is either the Administrator or 
					has a swimmer participant
 
 --------------------------------------------------------------------------------------------------------
 Change Log:
 v1.0.0 - 10/19/2010  Original Release - Generated by LAAF
 ********************************************************************************************************
 To keep the Generator from overwriting this file add the word NOT between the center asterisks ( *NOT* )
 *** DO *NOT* GENERATE ***
 ********************************************************************************************************/
 @SystemUserID int

as
;
--Swim Meets which the SystemUser is an Admin
with AdminSwimMeets (SwimMeetID) as(
		select usm.SwimMeetID
		from dbo.UserSwimMeet usm
		where usm.SystemUserID = @SystemUserID
		group by usm.SwimMeetID
),

--Swim Meets which the SystemUser has a swimmer as participant
	MemberSwimMeets (SwimMeetID) as (
	select sm.SwimMeetID
	from dbo.SwimMeet sm
	inner join dbo.SwimMeetTeam smt on smt.SwimMeetID = sm.SwimMeetID
	inner join dbo.SwimmerTeamSeason sts on sts.TeamSeasonID = smt.TeamSeasonID
	inner join dbo.UserSwimmer us on us.SwimmerID = sts.SwimmerID
	where us.SystemUserID = @SystemUserID
	and sm.SwimMeetID not in (	select usm.SwimMeetID
								from dbo.UserSwimMeet usm
								where usm.SystemUserID = @SystemUserID
								group by usm.SwimMeetID)
)	
		select
		 sm.[Description]
		,sm.LocationID
		,sm.StartDate
		,sm.SwimMeetID
		,sm.SwimMeetTypeID
		,sm.SeasonID
		,sm.EndDate
		,l.Name as LocationName
		,s.Description as SeasonDescription
		,lg.Description as LeagueDescription
		,lg.LeagueName as LeagueName
		,SIGN(count(r.ResultID)) as HasResults
		,1 as IsAdmin
	from dbo.SwimMeet sm
	inner join AdminSwimMeets asm on asm.SwimMeetID = sm.SwimMeetID
	inner join dbo.Location l on l.LocationID = sm.LocationID
	inner join dbo.Season s on s.SeasonID = sm.SeasonID
	inner join dbo.League lg on lg.LeagueID = s.LeagueID
	
	left outer join dbo.HeatSheet hst on hst.SwimMeetID = asm.SwimMeetID
	left outer join dbo.HeatSheetEvent hse on hse.HeatSheetID = hst.HeatSheetID
	left outer join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
	left outer join dbo.HeatSwimmer hsw on hsw.HeatID = h.HeatID
	left outer join dbo.Result r on r.HeatSwimmerID = hsw.HeatSwimmerID

	group by 
		 sm.[Description]
		,sm.LocationID
		,sm.StartDate
		,sm.SwimMeetID
		,sm.SwimMeetTypeID
		,sm.SeasonID
		,sm.EndDate
		,l.Name
		,s.Description
		,lg.Description
		,lg.LeagueName
		
	union
	
	select
		 sm.[Description]
		,sm.LocationID
		,sm.StartDate
		,sm.SwimMeetID
		,sm.SwimMeetTypeID
		,sm.SeasonID
		,sm.EndDate
		,l.Name as LocationName
		,s.Description as SeasonDescription
		,lg.Description as LeagueDescription
		,lg.LeagueName as LeagueName
		,SIGN(count(r.ResultID)) as HasResults
		,0 as IsAdmin
	from dbo.SwimMeet sm
	inner join MemberSwimMeets msm on msm.SwimMeetID = sm.SwimMeetID
	inner join dbo.Location l on l.LocationID = sm.LocationID
	inner join dbo.Season s on s.SeasonID = sm.SeasonID
	inner join dbo.League lg on lg.LeagueID = s.LeagueID
	
	left outer join dbo.HeatSheet hst on hst.SwimMeetID = msm.SwimMeetID
	left outer join dbo.HeatSheetEvent hse on hse.HeatSheetID = hst.HeatSheetID
	left outer join dbo.Heat h on h.HeatSheetEventID = hse.HeatSheetEventID
	left outer join dbo.HeatSwimmer hsw on hsw.HeatID = h.HeatID
	left outer join dbo.Result r on r.HeatSwimmerID = hsw.HeatSwimmerID

	group by 
		 sm.[Description]
		,sm.LocationID
		,sm.StartDate
		,sm.SwimMeetID
		,sm.SwimMeetTypeID
		,sm.SeasonID
		,sm.EndDate
		,l.Name
		,s.Description
		,lg.Description
		,lg.LeagueName
	
	order by StartDate desc		
go

